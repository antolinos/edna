targetNamespace "http://www.edna-site.org"

import XSDataCommon.XSConfiguration
import XSDataCommon.XSData
import XSDataCommon.XSDataBoolean
import XSDataCommon.XSDataFile
import XSDataCommon.XSDataDouble
import XSDataCommon.XSDataInput
import XSDataCommon.XSDataInteger
import XSDataCommon.XSDataString
import XSDataCommon.XSDataStatus
import XSDataCommon.XSDataResult
import XSDataCommon.XSDataImage
import XSDataCommon.XSDataLength
import XSDataCommon.XSDataWavelength

/*******************************************
  *  Common types used only in BioSaxs
  ********************************************/
complex type XSDataFileSeries extends XSData {
	files : XSDataFile []
}


complex type XSDataInputBioSaxsSample extends XSDataInput{
	"temporary class for multiple inhertitance emulation"
	sampleConcentration : XSDataDouble optional
	sampleComments : XSDataString optional
	sampleCode : XSDataString optional
}

complex type XSDataInputBioSaxsSampleExperiment extends XSDataInputBioSaxsSample{
	"temporary class for multiple inhertitance emulation"
	detector : XSDataString optional
	detectorDistance : XSDataLength optional
	pixelSize_1 : XSDataLength optional
	pixelSize_2 : XSDataLength optional
	beamCenter_1 : XSDataDouble optional
	beamCenter_2 : XSDataDouble optional
	beamStopDiode : XSDataDouble optional
	wavelength : XSDataWavelength optional
	machineCurrent : XSDataDouble optional
	maskFile : XSDataImage optional
	normalizationFactor : XSDataDouble optional
	}

complex type XSDataResultBioSaxsSample extends XSDataResult{
	"temporary class for multiple inhertitance emulation"
	sampleConcentration : XSDataDouble optional
	sampleComments : XSDataString optional
	sampleCode : XSDataString optional
	
}

complex type XSDataResultBioSaxsSampleExperiment extends XSDataResultBioSaxsSample{
	"temporary class for multiple inhertitance emulation"
	detector : XSDataString optional
	detectorDistance : XSDataLength optional
	pixelSize_1 : XSDataLength optional
	pixelSize_2 : XSDataLength optional
	beamCenter_1 : XSDataDouble optional
	beamCenter_2 : XSDataDouble optional
	beamStopDiode : XSDataDouble optional
	wavelength : XSDataWavelength optional
	machineCurrent : XSDataDouble optional
	maskFile : XSDataImage optional
	normalizationFactor : XSDataDouble optional
	}


complex type XSDataBioSaxsExperimentSetup extends XSData{
	detector : XSDataString optional
	detectorDistance : XSDataLength optional
	pixelSize_1 : XSDataLength optional
	pixelSize_2 : XSDataLength optional
	beamCenter_1 : XSDataDouble optional
	beamCenter_2 : XSDataDouble optional
	beamStopDiode : XSDataDouble optional
	wavelength : XSDataWavelength optional
	machineCurrent : XSDataDouble optional
	maskFile : XSDataImage optional
	normalizationFactor : XSDataDouble optional
}

complex type XSDataBioSaxsSample extends XSData {
	sampleConcentration : XSDataDouble optional
	sampleComments : XSDataString optional
	sampleCode : XSDataString optional

}


/**********************************************************
 *  Start of classes XSDataInput/XSDataResult used outside
 ***********************************************************/

complex type XSDataInputBioSaxsAsciiExportv1_0 extends XSDataInput {
	integratedImage : XSDataImage
	integratedCurve : XSDataFile
}
complex type XSDataResultBioSaxsAsciiExportv1_0 extends XSDataResult {
	integratedCurve : XSDataFile
	processLog : XSDataString
}

complex type XSDataInputBioSaxsAveragev1_0 extends XSDataInputBioSaxsSampleExperiment{
	integratedImage : XSDataImage []
	integratedImageSize : XSDataInteger
	averagedImage : XSDataImage
	averagedCurve : XSDataFile
	logFile : XSDataFile
}
complex type XSDataResultBioSaxsAveragev1_0 extends XSDataResult {
	averagedImage : XSDataImage
	averagedCurve : XSDataFile
	processLog : XSDataString
	logFile : XSDataFile
}


complex type XSDataInputBioSaxsAzimutIntv1_0 extends XSDataInputBioSaxsSampleExperiment{
	normalizedImage : XSDataImage
	normalizedImageSize : XSDataInteger optional
	integratedImage : XSDataImage
	integratedCurve : XSDataFile
	correctedImage : XSDataImage optional
}

complex type XSDataResultBioSaxsAzimutIntv1_0 extends XSDataResult {
	correctedImage : XSDataImage
	integratedImage : XSDataImage
	integratedCurve : XSDataFile
	processLog : XSDataString

complex type XSDataInputBioSaxsMetadatav1_0 extends XSDataInputBioSaxsSampleExperiment{
	inputImage : XSDataImage
	outputImage : XSDataImage optional
}

complex type XSDataResultBioSaxsMetadatav1_0 extends XSDataResultBioSaxsSampleExperiment{
	outputImage : XSDataImage optional
}

complex type XSDataInputBioSaxsNormalizev1_0 extends  XSDataInputBioSaxsSampleExperiment{
	rawImage : XSDataImage
	logFile : XSDataFile
	normalizedImage : XSDataImage
	rawImageSize : XSDataInteger
}

complex type XSDataResultBioSaxsNormalizev1_0 extends XSDataResult {
	normalizedImage : XSDataImage
	logFile : XSDataFile
	processLog : XSDataString
}

complex type XSDataInputBioSaxsProcessOneFilev1_0 extends XSDataInput{
	"Plugin that runs subsequently Normalize and Azimuthal integration"
	rawImage : XSDataImage
	sample: XSDataBioSaxsSample
	experimentSetup: XSDataBioSaxsExperimentSetup
	rawImageSize : XSDataInteger optional
	logFile : XSDataFile optional
	normalizedImage : XSDataImage optional
	integratedImage : XSDataImage optional
	integratedCurve : XSDataFile optional
}

complex type XSDataResultBioSaxsProcessOneFilev1_0 extends XSDataResult {
	normalizedImage: XSDataImage
	integratedImage: XSDataImage
	integratedCurve: XSDataFile
	//logFile : XSDataFile
//	processLog : XSDataString => use executive summary
}


complex type XSDataInputBioSaxsSmartMergev1_0 extends XSDataInput  {
	inputFile: XSDataFile []
	absoluteSimilarity: XSDataDouble optional 
	relativeSimilarity: XSDataDouble optional
	mergedCurve: XSDataFile
}

complex type XSDataResultBioSaxsSmartMergev1_0 extends XSDataResult {
	mergedCurve : XSDataFile
}

complex type XSDataInputBioSaxsReduceFileSeriev1_0 extends XSDataInput{
	"Run ProcessOneFile on each file of a time time serie  "	
	fileSerie: XSDataFileSeries
	sample: XSDataBioSaxsSample
	experimentSetup: XSDataBioSaxsExperimentSetup
	directory1D: XSDataFile
	directory2D: XSDataFile
	directoryMisc : XSDataFile
	forceReprocess: XSDataBoolean optional "if not present or False, just return the existing file, else force reprocessing in different folders"
	absoluteSimilarity: XSDataDouble optional 
	relativeSimilarity: XSDataDouble optional
	rawImageSize: XSDataInteger optional
}

complex type XSDataResultBioSaxsReduceFileSeriev1_0 extends XSDataResult {
	mergedCurve : XSDataFile
	directory1D : XSDataFile
	directory2D : XSDataFile
	directoryMisc : XSDataFile
}






complex type XSDataInputBioSaxsSingleSamplev1_0 extends XSDataInputBioSaxsSampleExperiment{
	"Class for precessing a single sample (at 1 single concentration)"
//	specVersion : XSDataString optional
//	specVariableStatus : XSDataString optional
//	specVariableAbort : XSDataString optional
//	runNumber : XSDataInteger
//	frames : XSDataInteger []
//	isOnline : XSDataBoolean
//	prefix : XSDataString
	directory1D : XSDataFile
	directory2D : XSDataFile
	directoryMisc : XSDataFile
	bufferSeries: XSDataFileSeries []
	sampleSeries: XSDataFileSeries []
	forceReprocess: XSDataBoolean optional
}

complex type XSDataResultBioSaxsSingleSamplev1_0 extends XSDataResult{
	"Class for precessing a single sample (at 1 single concentration)"
	outputCurve: XSDataFile
	directory1D : XSDataFile
	directory2D : XSDataFile
}
/**************************************
 *Start of a deprecated classes zone  * 
 **************************************/
/*
complex type XSDataInputBioSaxsReprocessv1_0 extends XSDataInputBioSaxsSampleExperiment{
	specVersion : XSDataString optional
	specVariableStatus : XSDataString optional
	specVariableAbort : XSDataString optional
	directory : XSDataFile
	frameFirst : XSDataInteger optional
	frameLast : XSDataInteger optional
	isOnline : XSDataBoolean optional
	keepOriginal : XSDataBoolean optional
	normalisation : XSDataString
	operation : XSDataString
	prefix : XSDataString
	runNumber : XSDataInteger [] optional
}
complex type XSDataResultBioSaxsReprocessv1_0 extends XSDataResult {
}

complex type XSDataSpecCommunication {
	specVersion : XSDataString optional
	specVariableStatus : XSDataString optional
	specVariableAbort : XSDataString	optional
}
 */
